/* REXX
 |
 | Name: SHOWMENM - ISPF Edit Macro
 |
 | Author: David Alcock
 |
 | Purpose: Enhance SHOWMVS by displaying a menu and inserting note
 |          lines at sections title.  These note lines are a
 |          different colour thereby enhancing the output somewhat.
 |
 |          The %SHOWMVS Rexx exec is slow because invoking SHOWMVS
 |          with the EDIT parm results in SHOWMVS doing all tasks
 |          before showing output unlike in browse.
 |
 |          The SHOWMENM edit macro is slow on the first invocation
 |          but we save the section line numbers and descriptions
 |          and reinvocations are pretty fast making it a zip to
 |          navigate SHOWMVS output.
 |
 | Limitations:
 | 1) Does NOT support concurrent executions of SHOWMENM
 | 2) Dependant on SHOWMVS output format.  This is a screenscraper.
 |
 | Requirements: ISPF panel "SHOWMENP"
 |
 | Disclaimer: This REXX exec is FREEWARE.  Use at your own risk.  It
 |             is provided for your enjoyment and neither David
 |             Alcock or his employer provides any warranty for it's
 |             use.  I'd like to hear how it works on your system.
 |
 |             This software is not in the public domain but is
 |             available free of charge and with source code provided.
 |             It is copyright 2002+ by David Alcock.
 |             All rights reserved.
 */

address ISPEXEC
"CONTROL ERRORS RETURN"
"VGET (ZSCREEN) ASIS"

address ISREDIT
'MACRO (MYPARM) NOPROCESS'
prc = rc
if prc > 4  then do
   say "SHOWMENM must be invoked as an edit macro"
   address ISPEXEC
   "TBCLOSE "table
   exit 12
   end

menu = 1
if strip(myparm) <> "" then do
   do i = 1 to words(myparm)
      if translate(word(myparm,i)) == "NOMENU" then menu = 0
      end
   end

if menu == 1 then do
   address ISPEXEC
   table = "SM"random()     /* Variable name for temp table */
   "TBCREATE "table" NOWRITE NAMES(LNUM DESC)"
   address ISREDIT
   end

/*---------------------------------------------------------------------
 | If we are being reinvoked and we retrieve the menu lines from
 | storage and display the table
 ------------------------------------------------------------------- */

address ISPEXEC
"VGET (SMLINES) ASIS"
vrc = rc
if vrc == 0 then do
   if smlines <> "" then do
      address ispexec

      if menu = 0 then do
         say "Reinvoking with NOMEMU option doesn't make sense"
         exit 4
         end

      do t = 1 to smlines
         "VGET (SMLINE"t") ASIS"
         interpret "lineval = smline"t
         parse value lineval with lnum "::"desc
         "TBADD "table
         end
      end

   call Display_Table
   exit 0
   end

/*---------------------------------------------------------------------
 | Process the lines in SHOWMVS output.  Look for section titles and:
 | 1) Change to NOTELINEs so they have a different colour.
 | 2) Save section names into ISPF variables for reinvocations
 | 3) Create table entries
 ------------------------------------------------------------------- */

address ISREDIT
"(FIRSTONE) = LINENUM .ZFIRST"  /* Get First in range  */
"(LASTONE)  = LINENUM .ZLAST"   /* Get last in range  */
t = 0

do i = firstone to lastone      /* clever, ain't I? */
   '(LINEVAL) = LINE' i
   lrc = rc
   if lrc <> 0 then leave       /* reached end of data? */
   if substr(lineval,1,1) == "#" then iterate  /* skip bad ones */
   if substr(lineval,1,1) <> " " then do

      /* Comment out the following two lines if you don't want to
         have to CANCEL out of SHOWMVS output */

      "LINE_AFTER "i" = NOTELINE '"lineval"'"
      "DELETE "i

      /* Save the section to saved variable */
      if menu == 1 then do
         t = t + 1
         desc.t  = strip(lineval)
         desc.t = strip(desc.t,'T',':')
         lnum.t = i
         end

      end
   end

if t = 0 then do
   say "Either you are not in "EDIT" or "VIEW" on SHOWMVS output"
   say "or SHOWMENM has an internal error"
   address ISPEXEC
   "TBCLOSE "table
   exit 8
   end

smlines = t
address ISPEXEC
"VPUT (SMLINES) ASIS"

if nomenu = 0 then exit 0

/*---------------------------------------------------------------------
 | For performance, we will avoid switching back and forth between
 | address ISREDIT and address ISPEXEC by doing this in a separate
 | loop.
 ------------------------------------------------------------------- */

do i = 1 to t
   lnum = lnum.i
   desc = desc.i
   interpret "SMLINE"i "= '"lnum"::"desc"'"
   "VPUT (SMLINE"i") ASIS"
   "TBADD "table
   end

call Display_Table

exit 0

/*---------------------------------------------------------------------
 | Display the table
 ------------------------------------------------------------------- */
Display_Table:
   trace ?r
address ISPEXEC "TBTOP "table
tsel = ""
nrc = 0
do while nrc == 0
   address ISPEXEC "TBDISPL "table" PANEL(SHOWMENP)"
   nrc = rc
   if nrc == 0 then do
      tsel = TRANSLATE(tsel)
      if strip(tsel) <> "" then nrc = 4
      end
   end
address ISPEXEC "TBCLOSE "table
address ISREDIT
if lnum > 2 then lnum = lnum - 1
"LOCATE "lnum
return
