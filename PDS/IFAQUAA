*
* %DCL IFAQUAA_INCLUDED CHAR EXT;
* %DEACTIVATE IFAQUAA_INCLUDED;
* %IF IFAQUAA_INCLUDED = '' %THEN
* %DO;
*/* Macro made bi-lingual on 07116. CBGEN compile date 07108         */
*% /*
         MACRO
         IFAQUAA &DSECT=YES,&LIST=YES,&TITLE=YES,&QUAHDR=YES,          *
               &QUALS=COND
         GBLC  &IFAQUAA_INCLUDED
         GBLC  &ZCBPRINT
&IFAQUAA_INCLUDED SETC 'YES'
         AIF   ('&LIST' EQ 'NONE').P0
         AIF   ('&TITLE' EQ 'NO').P5
 TITLE   'IFAQUAA  - SMF Query Answer Area                          '
.P5      ANOP
**/ IFAQUAA_1:;
*/* START OF SPECIFICATIONS *******************************************
*
*  **PROPRIETARY_STATEMENT********************************************
***01* PROPRIETARY STATEMENT=                                        *
*                                                                    *
*                                                                    *
*   LICENSED MATERIALS - PROPERTY OF IBM                             *
*   THIS MACRO IS "RESTRICTED MATERIALS OF IBM"                      *
*   5694-A01 (C) COPYRIGHT IBM CORP. 2007                            *
*                                                                    *
*   STATUS= HBB7740                                                  *
*                                                                    *
*  **END_OF_PROPRIETARY_STATEMENT*************************************
*
*01* DESCRIPTIVE NAME:  SMF Query Answer Area
*02*  ACRONYM:  QUAA
*
*01* MACRO NAME:  IFAQUAA
*
*01* EXTERNAL CLASSIFICATION: GUPI
*01* END OF EXTERNAL CLASSIFICATION:
*
*01* DSECT NAME:
*     QUAHDR
*     QUALS
*
*01* COMPONENT:  System Management Facility (SC100)
*
*01* EYE-CATCHER:  NONE
*
*01* STORAGE ATTRIBUTES:
*02*  SUBPOOL:  Caller-supplied
*02*  KEY:  Caller-supplied
*02*  RESIDENCY:  Caller-supplied
*
*01* SIZE:  Variable
*                QUAHDR -- X'0010' bytes
*                QUALS  -- X'0050' bytes
*
*01* CONTROL BLOCK CHANGES:
*02*  IFAU29LM
*02*   5.3
*03*    New
*03*    Migration Considerations: NONE
*01* END CONTROL BLOCK CHANGES
*
*01* CREATED BY:
*     Caller and passed as parameter on ANSAREA keyword
*      on IFAQUERY invocation
*
*01* POINTED TO BY:
*     IFAQUERY parameter list
*
*01* SERIALIZATION:
*     None required
*
*01* FUNCTION:
*02* Maps the data returned by the IFAQUERY macro request.
*
*
*01* METHOD OF ACCESS:
*02*  ASM:
*      IFAQUERY
*           DSECT=YES|NO  -- Request DSECT definition
*           QUALS=YES|NO|COND -- Request QUALS record mapping
*     Default: DSECT=YES
*     Notes: name=YES  => expand
*            name=NO   => do not expand
*            name=COND => expand only if DSECT=YES
*
*02*  PL/AS:
*
*
*01* DELETED BY:  Caller
*
*01* FREQUENCY:  Created by caller
*
*01* DEPENDENCIES:  None
*
*01* DISTRIBUTION LIBRARY:  AMACLIB
*
*01* CHANGE ACTIVITY:
*
*  $L0=SMFDV   ,HBB7740,061212,PDHV: SMF DATA VOLUME             @L0A
*
* Change activity details:
*  A - Created                                                   @L0A
*
* END OF SPECIFICATIONS **********************************************/
*% /*
.P0      ANOP
         AIF   ('&ZCBPRINT' EQ 'NO').P1
         AIF   ('&LIST' EQ 'YES').P2
.P1      ANOP
         PUSH  PRINT
         PRINT OFF
.P2      ANOP
         AIF   ('&QUAHDR' EQ 'NO').L0002
         AIF   ('&DSECT' EQ 'YES').L0003
         AIF   ('&QUAHDR' NE 'YES').L0002
QUALSHDR DS    0F        Header section
         AGO   .L0004
.L0003   ANOP
QUALSHDR DSECT           Header section
.L0004   ANOP
QUALSH#REC DS    F       Number of QUALS records which                 *
                         follow. Note: this field is zero with zero    *
                         return code, when the service could not find  *
                         any records and SMF is recording
QUALSH#REM DS    F       Number of QUALS records which were            *
                         not returned because of insufficient space
QUALSHTLEN DS    F       Total length of answer area needed to contain *
                         all the requested information. This includes  *
                         the area for the records that were returned   *
                         on this call.
QUALSHDOFF DS    F         Offset from QUAHDR to the first data record.
QUALSHDR_LEN EQU *-QUALSHDR
.L0002   ANOP
         AIF   ('&QUALS' EQ 'NO').L0005
         AIF   ('&DSECT' EQ 'YES').L0006
         AIF   ('&QUALS' NE 'YES').L0005
.L0006   ANOP
*
*    *****************************************************************
*    *                                                               *
*    * QUAA Logstream Data WARNING! You must use the QUALSLEN to     *
*    * determine the size of QUALS that is presented. This size can  *
*    * change at any time due to new SMF support or service.         *
*    *                                                               *
*    *****************************************************************
*
*
         AIF   ('&DSECT' EQ 'YES').L0007
QUALS    DS    0F        Logstream Record data format
         AGO   .L0008
.L0007   ANOP
QUALS    DSECT           Logstream Record data format
.L0008   ANOP
QUALSTYP DS    B         X'02' Logstream record, X'82' last Logstream  *
                         record
         DS    B         Reserved X'00'
QUALSLEN DS    H         Length of Logstream record
QUALSNAME DS   CL26      Logstream name
         DS    H         Reserved
QUALSREC DS    CL32      256 bit bitstring describing record types     *
                         being recorded to this logstream (record 0 is *
                         in first bit of first byte, record 255 is     *
                         last bit of byte 32.)
QUALSBSZ DS    F         Logstream bufsize in bytes
QUALSTOD DS    BL8       Last successful write TOD
QUALSTAT DS    BL4       Logstream Status
         ORG   QUALSTAT
QUALSTB1 DS    B         Status byte 1
*  Bit definitions:
QUALSDEF EQU   X'80'     Default logstream, accepting records which    *
                         are not being recorded in any other           *
                         logstream.
QUALSACT EQU   X'40'     Active
QUALSCLN EQU   X'20'     being cleaned up
QUALSCNT EQU   X'10'     Connected
QUALSTB2 DS    B         Status byte 2
QUALSTB3 DS    B         Status byte 3
QUALSTB4 DS    B         Status byte 4
QUALS_LEN EQU  *-QUALS
.L0005   ANOP
         AIF   ('&ZCBPRINT' EQ 'NO').P3
         AIF   ('&LIST' EQ 'YES').P4
.P3      ANOP
         POP   PRINT
.P4      ANOP
.P_EXIT  ANOP
         MEND
**/ IFAQUAA_2:;
* %IFAQUAA_INCLUDED = 'YES';
* %DCL ZCBPRINT CHAR EXT;
* %DEACTIVATE ZCBPRINT;
* %DCL IFAQUAA_LIST CHAR EXT;
* %DEACTIVATE IFAQUAA_LIST;
* %IF IFAQUAA_LIST ¬= 'NO' &
*    ZCBPRINT ¬= 'NO' %THEN
*   %GOTO IFAQUAA_3;
*   @LIST PUSH NOECHO;
*   @LIST NOASSEMBLE NOECHO;
*   @LIST OFF C NOECHO;
* %IFAQUAA_3:;
*/* Start of PL/X Source                                             */
*   DECLARE
*     1    QUAHDRType Type,         /* Header section                */
*      2    QUAH#REC FIXED(32),     /* Number of QUALS or QUADS
*                                      records which follow.
*                                      Note: this field is zero with
*                                      zero return code, when the
*                                      service could not find any
*                                      records and SMF is recording  */
*      2    QUAH#REM FIXED(32),     /* Number of QUALS or
*                                      QUADS records which were not
*                                      returned because of
*                                      insufficient space            */
*      2    QUAHTLEN FIXED(32),     /* Total length of answer area
*                                      needed to contain all the
*                                      requested information. This
*                                      includes the area for the
*                                      records that were returned on
*                                      this call.                    */
*      2    QUAHDOFF FIXED(32);     /* Offset from QUAHDR to the first
*                                      data record.                  */
*
*   /*****************************************************************/
*   /*                                                               */
*   /* QUAA Logstream Data                                           */
*   /*                                                               */
*   /* WARNING! You must use the QUALSLEN to determine the size of   */
*   /* QUALS that is presented. This size can change at any time     */
*   /* due to new SMF support or service.                            */
*   /*                                                               */
*   /*****************************************************************/
*
*   DECLARE
*     1    QUALSType Type,          /* Logstream Record data format  */
*      2    QUALSTYP BIT(8),       /* X'02' Logstream record, X'82'
*                                      last Logstream record         */
*      2    *        BIT(8),        /* Reserved X'00'                */
*      2    QUALSLEN FIXED(16),     /* Length of Logstream record    */
*      2    QUALSNAME CHAR(26),     /* Logstream name                */
*      2    *        FIXED(16),     /* Reserved                      */
*      2    QUALSREC  CHAR(32),     /* 256 bit bitstring describing
*                                      record types being recorded
*                                      to this logstream (record 0
*                                      is in first bit of first byte,
*                                      record 255 is last bit of
*                                      byte 32.)                     */
*      2    QUALSBSZ  FIXED(32),    /* Logstream bufsize in bytes    */
*      2    QUALSTOD BIT(64),       /* Last successful write TOD     */
*      2    QUALSTAT BIT(32),       /* Logstream Status              */
*       3    QUALSTB1 BIT(8),       /* Status byte 1                 */
*        4    QUALSDEF  BIT(1),     /* Default logstream, accepting
*                                      records which are not being
*                                      recorded in any other
*                                      logstream.                    */
*        4    QUALSACT  BIT(1),     /* Active                        */
*        4    QUALSCLN  BIT(1),     /* being cleaned up              */
*        4    QUALSCNT  BIT(1),     /* Connected                     */
*        4    *       BIT(4),       /* Reserved                      */
*       3    QUALSTB2 BIT(8),       /* Status byte 2                 */
*       3    QUALSTB3 BIT(8),       /* Status byte 3                 */
*       3    QUALSTB4 BIT(8);       /* Status byte 4                 */
* @LOGIC;
* #PRAGMA TOOL=CBGEN.
* #USEORG.
* #EPRAGMA.
* @ENDLOGIC;
*/* End of PL/X Source                                               */
* %IF IFAQUAA_LIST ¬= 'NO' &
*    ZCBPRINT ¬= 'NO' %THEN
*   %GOTO IFAQUAA_4;
*   @LIST POP NOECHO;
* %IFAQUAA_4:;
* %END;
